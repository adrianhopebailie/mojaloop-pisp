@startuml

title PISP transfer model\n(using Merchant Request to Pay Model)

actor Alice as CA
participant "Payer DFSP\n(DFSP A)" as DA
participant "Switch" as S
participant "ALS" as A
participant "Payee DFSP\n(DFSP B)" as DB
actor Bob as CB

== Discovery phase ==

CA->DA: I'd like to send $100 to Bob
DA->S: Which DFSP owns B@Somewhere?\n(**GET /parties**)
activate S 
S-->DA: 202 I'll get back to you
deactivate DA
S->A: Which DFSP owns B@Somewhere?
activate A 
A-->S: It's DFSP B
deactivate A
S->DB: Do you speak for B@Somewhere?
activate DB
DB-->S: ""202"": I'll get back to you
deactivate S
DB->DB: Retrieve customer information for Bhavesh
DB->S: Here's Bhavesh's personal information
activate S 
S-->DB: ""200"": OK, got it
deactivate DB

S->DA: DFSP A speaks for B@Somewhere\nThe customer is Bhavesh
activate DA
DA-->S: ""200"": OK, got it
deactivate S
DA->CA: System reports\ncustomer name is Bhavesh. Is this right?
CA-->DA: Yes, it is. Customer is happy that she's\nsending to the right recipient
deactivate DA

== Agreement Phase ==

D2->S: Please provide me with a quotation for this transfer
activate S
S-->D2: 202 I'll get back to you
deactivate D2
note over S

Again, this is a completely standard quote request
Note that it includes the transactionRequestId from the original request

FSPIOP-Source: DFSP A
FSPIOP-Destination: DFSP B

{
    "quoteId": "7c23e80c-d078-4077-8263-2c047876fcf6",
    "transactionId": "85feac2f-39b2-491b-817e-4a03203d4f14",
    "transactionRequestId": "8d34f91d-d078-4077-8263-2c047876fcf6",
    "payee": {
        "partyIdInfo": {
            "partyIdType": "ALIAS",
            "partyIdentifier": "B@Somewhere",
            "fspId": "DFSP B"
        }
    },
    "payer": {
        "personalInfo": {
            "complexName": {
                "firstName": "Ayesha",
                "lastName": "Takia"
            }
        },
        "partyIdInfo": {
            "partyIdType": "ALIAS",
            "partyIdentifier": "A@Elsewhere",
            "fspId": "DFSP A"
        }
    },
    "amountType": "RECEIVE",
    "amount": {
        "amount": "100",
        "currency": "USD"
    },
    "transactionType": {
        "scenario": "TRANSFER",
        "initiator": "PAYER", 
        "initiatorType": "CONSUMER"
    },
    "expiration": "2020-02-15T22:17:28.985-01:00"
}
end note 

S->D3: Please quote on this proposed transfer
activate D3
D3-->S: 202 I'll get back to you
deactivate S
D3->D3: Prepare the quotation
D3->S: Here is the quotation
activate S 
S-->D3: 200 OK, got it
deactivate D3

note over S
Now we need to make a change to how things work now.
We need to report this information to the PISP,
so that it can:

a) Understand the progress of the transfer
b) Report on the terms of the transfer (e.g. fees) to the customer
end note

S->D2: Here is the quote response
activate D2
D2-->S: 200 OK, got it
deactivate S
D2->D2: Is this a payee-initiated quote?\n(i.e. does the quote have a transactionRequestId?)
alt No, it isn't
D2->D2: Do nothing
else Yes, it is.
D2->D2: Find the related transaction request
D2->D2: Is the payee DFSP the same as the requester DFSP?
alt Yes, it is.
D2->D2: This is a payee-initiated transfer.\nDo nothing
else No, it isn't
D2->S: Forward the quote response to the PISP
activate S
S-->D2: 200 OK, got it

note over S
This is syntactically ugly, because you shouldn't send
a **PUT** except in response to a request. But we'll worry
about that later...
end note

S->D1: Here's the quote you asked for
activate D1
D1-->S: 200 OK, got it
deactivate S 
D1->D1: WTF?
D1->D1: Oh, OK. I can see that this is a response\nto a transfer request. I'll look up the transfer request
D1->D1: Store the quote with the transfer request
deactivate D1
D2->S: Please ask the customer to validate the transfer\n**GET /authorizations/transactionRequestId**
activate S
S-->D2: 202 I'll get back to you
deactivate D2
S->D1: Please ask the customer to validate the transfer\n**GET /authorizations/transactionRequestId**
activate D1
D1-->S: 202 I'll get back to you
deactivate S
D1->D1: Get me the quote data for this transfer request
D1->App: Here are the terms for your customer's transfer
activate App
App-->D1: 202 I'll get back to you
App->CA: Here are the terms for your transfer.\nPlease authenticate yourself and confirm\nthat you're happy to proceed
CA->App: Here's my fingerprint. I'm happy to proceed
App->D1: Customer has approved the terms.
D1-->App: 200 OK, got it
deactivate App
D1->S: Customer has confirmed the transfer
activate S
S-->D1: 200 OK, got it
deactivate D1
S->D2: Customer has confirmed the transfer
activate D2
D2-->S: 200 OK, got it
deactivate S
D2->D2: Store the transfer request number against\nthe transaction number given in the quote.\nThis will be useful when the transfer comes back 

== Transfer Phase ==

note over D2
So now Ayesha's bank knows that she has confirmed
that she wants to complete the transfer on the terms
offered by Bhavesh's DFSP. The bank can go ahead
and request the transfer.

It does this in the normal way, and we pick the story
up again when the successful transfer message is received
by DFSP A
end note

D2->D2: Do I have a transfer request associated\nwith this transaction?
note over D2
We're in the Yes box, so, er, yes.
end note

D2->S: Forward the transfer response to the PISP
activate S
S-->D2: 200 OK, got it
deactivate D2

note over S
This too is syntactically ugly, because you shouldn't send
a **PUT** except in response to a request. But we'll worry
about that later...
end note

S->D1: Here's the status of the transfer you asked for
activate D1
D1-->S: 200 OK, got it
deactivate S 
D1->D1: WTF?
D1->D1: Oh, OK. I can see that this is a response\nto a transfer request.\nI'll look up the quote with this transaction ID\n and use it to find the transfer request
D1->App: Transfer was successful
activate App
App->CA: Your funds were successfully transferred to Bhavesh.
CA-->App: Thank you very much.
deactivate App
deactivate D1

end
end

@enduml